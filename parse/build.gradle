apply plugin: "com.android.library"
apply plugin: "maven-publish"
apply plugin: "io.freefair.android-javadoc-jar"
apply plugin: "io.freefair.android-sources-jar"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        consumerProguardFiles "release-proguard.pro"
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
            buildConfigField("String","PARSE_VERSION","\"${version}\"")
        }
        release {
            minifyEnabled false
            testCoverageEnabled = false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            buildConfigField("String","PARSE_VERSION","\"${version}\"")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

ext {
    okhttpVersion = "4.10.0"
}

dependencies {
    api "androidx.annotation:annotation:1.4.0"
    api "androidx.core:core:1.8.0"
    api "com.squareup.okhttp3:okhttp:$okhttpVersion"
    api project(':bolts-tasks')

    testImplementation "org.junit.jupiter:junit-jupiter:$rootProject.ext.jupiterVersion"
    testImplementation "org.skyscreamer:jsonassert:1.5.0"
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.ext.mockitoCoreVersion"
    testImplementation "org.robolectric:robolectric:$rootProject.ext.robolectricVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttpVersion"
}

//region Publishing

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
            }
        }
    }
}

//endregion

//region Code Coverage

apply plugin: "com.dicedmelon.gradle.jacoco-android"

jacoco {
    toolVersion = "0.8.12"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
    testLogging {
        events "SKIPPED", "FAILED"
        showStandardStreams true
        showExceptions true
        showCauses true
        showStackTraces true
        exceptionFormat "full"
    }
}

jacocoAndroidUnitTestReport {
    csv.enabled false
    html.enabled true
    xml.enabled true
}

//endregion
